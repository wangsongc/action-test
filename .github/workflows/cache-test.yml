---
name: windows

on:
  pull_request:
  push:
jobs:
  vs:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        EVENT_MATRIX: [NONE]
        include:
         - os: windows-2016
           EVENT_MATRIX: NONE
    steps:
      - uses: actions/checkout@v2.0.0

      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: D:\a\action-test\action-test\build
          key: ${{ matrix.os }}-${{ matrix.EVENT_MATRIX }}-v1

      - name: Cache Depends
        id: cache-depends
        uses: actions/cache@v2
        with:
          path: C:\vcpkg\installed\x64-windows
          key: ${{ matrix.os }}-vcpkg

#       - name: Get specific version CMake
#         uses: lukka/get-cmake@v3.17.3
       

      - name: Prepare vcpkg
        uses: lukka/run-vcpkg@v2
        id: runvcpkg
        with:
          vcpkgArguments: zlib:x64-windows
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: 8e76503a769e153dad8f4e7b2c95a152bb35edaa
          vcpkgTriplet: x64-windows
          appendedCacheKey: ${{ matrix.os }}

      - run: echo $env:PATH  
#       - name: Install Depends
#         if: steps.cache-depends.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           vcpkg update
#           vcpkg install zlib:x64-windows

      - name: Build And Test
        shell: powershell
        run: |
          if (-not (Test-Path -Path "./build")){
             mkdir build
             cp README.md ./build
           }
          echo "build"
          ls build
          echo "vcpkg"
          ls "${{ runner.workspace }}\vcpkg\installed\x64-windows\lib"
          ls ${{ runner.workspace }}\vcpkg\scripts\buildsystems
          
