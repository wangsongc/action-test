name: msys test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - master
    tags:
    - '*'

jobs:
  windows2019:
    runs-on: windows-latest
    strategy:
      matrix:
        EVENT_BUILD_METHOD: [autotools, cmake]
        EVENT_MATRIX: [""]    

    steps:      
    - uses: actions/checkout@v1
#     - name: use vcpkg
#       run: vcpkg install zlib:x64-windows
    - name: version
      shell: powershell
      run: |
        echo $env:PATH
        echo "runner.os:${{runner.os}}"
        echo "github.run_id:${{github.run_id}}"
        echo  $ImageVersion
        echo  $imageVersion
        echo "*************"
        echo  $env:ImageVersion
        echo  $env:imageVersion
      
    
#     - name: Setup MSYS2
#       uses: msys2/setup-msys2@v2
#       with:
#         # Variant of the environment to set by default: MSYS, MINGW32 or MINGW64
#         # Default value for MSYS2_PATH_TYPE environment variable: strict, inherit or minimal
#         # Retrieve and extract base installation from upstream GitHub Releases
#         # Update MSYS2 installation through pacman
#         update: true
#         # Install packages after installation through pacman
#         install: mingw-w64-x86_64-gcc mingw-w64-x86_64-openssl mingw-w64-x86_64-mbedtls
#     - uses: numworks/setup-msys2@v1
#       with: 
#     # Variant of the environment to set by default: MSYS, MINGW32 or MINGW64
#         msystem: MINGW64
#     - run: |
#         ls "C:\Program Files\OpenSSL"
#         if (( "${{ matrix.EVENT_MATRIX }}" -eq "" ) -and ( "${{ matrix.EVENT_BUILD_METHOD }}" -eq "cmake" )) {
#           $EVENT_CMAKE_OPTIONS=""
#         } else {
#           $EVENT_CONFIGURE_OPTIONS=""
#         }

#         if ( "${{ matrix.EVENT_BUILD_METHOD }}" -eq "autotools" ) {
#           $script='
#           [[ $? -ne 0 ]] && exit 1
#           mkdir build-autotools 2>/dev/null
#           cd build-autotools
#           [[ $? -ne 0 ]] && exit 1
#           pwd
#           [[ $? -ne 0 ]] && exit 1
#           pwd
#           '
#           D:\a\_temp\msys\\msys64\usr\bin\bash.exe -c -l $script
#         }

        


